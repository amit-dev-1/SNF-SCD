--CREATING SEPERATE SCHEMA TO IMPLEMENT SCD TYPE 2 
CREATE SCHEMA SCD2;
USE SCHEMA SCD2 ;

--CREATING THE SEQUENC TO UUNIQLY IDENTIFY THE EACH RECORD IN TARGET TABLE

CREATE OR REPLACE SEQUENCE MY_SEQ START WITH 1 INCREMENT BY 1 ORDER ;

--CREATING EMPLOYEE TABLE, CONSIDERING EMPLOYEE_ID IS PRIMARY KEY

CREATE OR REPLACE TABLE EMPLOYEE_DTL(
employee_id INT,
first_name VARCHAR,
last_name VARCHAR,
date_of_birth DATE,
email VARCHAR,
phone_number VARCHAR,
hire_date DATE,
job_title VARCHAR,
department_id INT,
salary NUMBER(8,2),
manager_id INT
) ;


--CREATING A TARGET TABLE TO LOAD EMPLOYEE DATA

CREATE OR REPLACE TABLE EMPLOYEE_DIM(
SG_KEY INT DEFAULT MY_SEQ.NEXTVAL,
employee_id INT,
first_name VARCHAR,
last_name VARCHAR,
date_of_birth DATE,
email VARCHAR,
phone_number VARCHAR,
hire_date DATE,
job_title VARCHAR,
department_id INT,
salary NUMBER(8,2),
manager_id INT,
START_DT TIMESTAMP_NTZ,
END_DT TIMESTAMP_NTZ,
ACTIVE_FLG VARCHAR
) ;

--CREATING STREAM ON TOP OF EMPLOYEE TABLE

CREATE OR REPLACE STREAM EMPLOYEE_CDC ON TABLE EMPLOYEE_DTL ;
SELECT * FROM EMPLOYEE_CDC ;

--CREATING A VIEW SO THAT WE CAN PROCESS THE HISTORICAL AND NEW RECORDS IN MERGE OPERATION

CREATE OR REPLACE VIEW EMPLOYEE_CDC_V AS
    --SELECTING NEWLY INSERTED RECORDS FROM STREAM
    SELECT NULL AS SG_KEY,employee_id,first_name,last_name,date_of_birth,email,phone_number,hire_date,
        job_title,department_id,salary,manager_id,CURRENT_TIMESTAMP() AS START_DT,
        NULL AS END_DT, '1' AS ACTIVE_FLG,'I' AS DML_TYP FROM EMPLOYEE_CDC WHERE METADATA$ACTION='INSERT'
        AND METADATA$ISUPDATE='FALSE' 
        
    --TWO RECORDS WILL CAPTURE IN STREAM CORRESPONDING TO EACH UPDATED RECORDS IN SRC,ONE WILL BE NEWLY UPDTAED REC AND 2ND IS JUST ONE STEP BACK PAST HISTORY 
    UNION
    SELECT * FROM (
        --SELECTING THE NEWLY UPDATED RECORDS FROM STREAM SO THAT WE CAN INSERT INTO THE TARGET TABLE.
        SELECT NULL AS SG_KEY,S.employee_id,S.first_name,S.last_name,S.date_of_birth,S.email,S.phone_number,S.hire_date,
            S.job_title,S.department_id,S.salary,S.manager_id,T.START_DT,NULL AS END_DT,'1' AS ACTIVE_FLG,'I' AS DML_TYP 
            FROM EMPLOYEE_CDC S 
            JOIN EMPLOYEE_DIM T ON S.employee_id=T.employee_id WHERE METADATA$ACTION='INSERT' AND METADATA$ISUPDATE='TRUE' 
            AND T.ACTIVE_FLG='1'
        UNION
        --SELECTING PAST RECORD FROM STREAM SO THAT WE CAN UPDATE THE END DATE AND FLG IN TARGET TABLE.
        SELECT SG_KEY,employee_id,NULL AS first_name,NULL AS last_name,NULL AS date_of_birth,
            NULL AS email,NULL AS phone_number,NULL AS hire_date,NULL AS job_title,NULL AS department_id,NULL AS salary,
            NULL AS manager_id,NULL AS START_DT,CURRENT_TIMESTAMP() AS END_DT,'0' AS ACTIVE_FLG,'U' AS DML_TYP FROM 
            EMPLOYEE_DIM WHERE EMPLOYEE_ID IN (SELECT DISTINCT EMPLOYEE_ID FROM EMPLOYEE_CDC WHERE METADATA$ACTION='DELETE' 
            AND METADATA$ISUPDATE='TRUE' ) AND ACTIVE_FLG='1' )

    --SELECTING THE RECORDS FROM STREAM WHICH ARE DELETED IN SRC.
    UNION
    SELECT T.SG_KEY,S.employee_id,NULL AS first_name,NULL AS last_name,NULL AS date_of_birth,
            NULL AS email,NULL AS phone_number,NULL AS hire_date,NULL AS job_title,NULL AS department_id,NULL AS salary,
            NULL AS manager_id,NULL AS START_DT,CURRENT_TIMESTAMP() AS END_DT,'0' AS ACTIVE_FLG,'D' AS DML_TYP 
            FROM EMPLOYEE_CDC S 
            JOIN EMPLOYEE_DIM T ON S.EMPLOYEE_ID=T.EMPLOYEE_ID WHERE S.METADATA$ACTION='DELETE' 
            AND S.METADATA$ISUPDATE='FALSE' AND T.ACTIVE_FLG='1' ;


---QUERYING THE VIEW TABLE

SELECT * FROM EMPLOYEE_CDC_V ;
    

---CREATING THE MERGE REQUEST

MERGE INTO EMPLOYEE_DIM T USING (SELECT * FROM EMPLOYEE_CDC_V) S ON S.EMPLOYEE_ID=T.EMPLOYEE_ID AND S.SG_KEY=T.SG_KEY
WHEN MATCHED AND DML_TYP='U' THEN UPDATE
SET T.END_DT=S.END_DT,T.ACTIVE_FLG=S.ACTIVE_FLG
WHEN MATCHED AND DML_TYP='D' THEN UPDATE
SET T.END_DT=S.END_DT,T.ACTIVE_FLG=S.ACTIVE_FLG
WHEN NOT MATCHED AND DML_TYP='I' THEN 
INSERT(employee_id,first_name,last_name,date_of_birth,email,phone_number,hire_date,job_title,department_id,salary,manager_id,
START_DT,END_DT,ACTIVE_FLG) VALUES(S.employee_id,S.first_name,S.last_name,S.date_of_birth,S.email,S.phone_number,S.hire_date,S.job_title,S.department_id,
S.salary,S.manager_id,S.START_DT,S.END_DT,S.ACTIVE_FLG) ;

---SELECTING DATA FROM TARGET TABLE 

SELECT * FROM EMPLOYEE_DIM ;


---AUTOMATING THE MERGE SCRIPT USING TASK, WE WILL SCHEDULE TO RUN THE MERGE STATEMENT ON MON-FRI AT 17:10 PM IST, WE WILL USE SERVERLESS COMPUTE RESOURCES THAT IS AUTOMATICALLY MANAGE BY SNOWFLAKE

CREATE OR REPLACE TASK EMP_LD_SCHDL USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE='XSMALL' 
SCHEDULE='USING CRON 10 17 * * MON-FRI Asia/Kolkata'
WHEN SYSTEM$STREAM_HAS_DATA('EMPLOYEE_CDC') 
AS
MERGE INTO EMPLOYEE_DIM T USING (SELECT * FROM EMPLOYEE_CDC_V) S ON S.EMPLOYEE_ID=T.EMPLOYEE_ID AND S.SG_KEY=T.SG_KEY
WHEN MATCHED AND DML_TYP='U' THEN UPDATE
SET T.END_DT=S.END_DT,T.ACTIVE_FLG=S.ACTIVE_FLG
WHEN MATCHED AND DML_TYP='D' THEN UPDATE
SET T.END_DT=S.END_DT,T.ACTIVE_FLG=S.ACTIVE_FLG
WHEN NOT MATCHED AND DML_TYP='I' THEN 
INSERT(employee_id,first_name,last_name,date_of_birth,email,phone_number,hire_date,job_title,department_id,salary,manager_id,
START_DT,END_DT,ACTIVE_FLG) VALUES(S.employee_id,S.first_name,S.last_name,S.date_of_birth,S.email,S.phone_number,S.hire_date,S.job_title,S.department_id,
S.salary,S.manager_id,S.START_DT,S.END_DT,S.ACTIVE_FLG) ;

DESC TASK EMP_LD_SCHDL ;

---WHEN WE CREATE THE TASK IT WILL BE IN SUSPENDED STATE, WE WILL RESUME TASK USING ALTER COMMAND

ALTER TASK EMP_LD_SCHDL RESUME ;